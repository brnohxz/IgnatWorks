{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/spanStyles.module.css","p2-homeworks/h5/HW5.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p2-homeworks/h5/Navbar.tsx","p2-homeworks/h5/SidebarList.tsx","p2-homeworks/h5/Sidebar.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","MessageCSS","chat","yours","messages","MessageWrapper","alt","userPNG","src","avatar","senderName","message","last","name","MessageTime","time","messageData","HW1","Affair","affair","_id","priority","onClick","deleteAffairCallback","Affairs","mappedAffairs","data","map","a","key","Button","variant","color","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","s","value","onChange","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","trim","alert","HW3","setUsers","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperButton","red","disabled","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","console","log","PreJunior","Error404","Container","maxWidth","Typography","align","component","gutterBottom","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","defaultSpan","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","x","y","HW6","setValue","undefined","defaultState","getItem","parse","restoreState","SuperSelect","options","onChangeOption","mappedOptions","SuperRadio","o","i","arr","HW7","Junior","PATH","Routes","path","exact","render","to","HW5","hw5","useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","Navbar","classes","AppBar","position","Toolbar","IconButton","edge","aria-label","openSideBar","width","backgroundColor","palette","background","paper","nested","paddingLeft","fontStyle","textDecoration","activeLinkStyles","SidebarList","React","open","setOpen","List","aria-labelledby","subheader","ListSubheader","id","activeClassName","ListItem","button","closeOnClick","ListItemText","primary","Collapse","in","timeout","unmountOnExit","disablePadding","list","fullList","Sidebar","toggleDrawer","event","clsx","Fragment","SwipeableDrawer","anchor","isOpen","onClose","onOpen","App","sideBarStatus","setSideBarStatus","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.fe61aeb8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__8WR15\",\"chat\":\"Message_chat__3YMyi\",\"messages\":\"Message_messages__1Alhk\",\"yours\":\"Message_yours__1jahm\",\"last\":\"Message_last__1_GhP\",\"mine\":\"Message_mine__3wzoO\",\"userPNG\":\"Message_userPNG__3atua\",\"MessageWrapper\":\"Message_MessageWrapper__2FId-\",\"MessageTime\":\"Message_MessageTime__1N6Ls\",\"senderName\":\"Message_senderName__1kLT7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3XH9u\",\"errorInput\":\"SuperInputText_errorInput__3ei0N\",\"error\":\"SuperInputText_error__2J82S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__-BXUG\",\"button\":\"SuperButton_button__cV79v\",\"red\":\"SuperButton_red__1kaz_\",\"disabled\":\"SuperButton_disabled__1RDZL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__Imn1x\",\"spanClassName\":\"SuperCheckbox_spanClassName__1K9ch\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1Sc4o\",\"div\":\"App_div__2Hyvm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__uGflL\",\"error\":\"Greeting_error__1uvQ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2RJeg\",\"column\":\"HW4_column__2ZS4I\",\"testSpanError\":\"HW4_testSpanError___Mj8X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultSpan\":\"spanStyles_defaultSpan__2x1jA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hw5\":\"HW5_hw5__3ll6r\"};","import React from 'react'\nimport MessageCSS from './Message.module.css'\n\nexport type MessageDataPropsType = {\n    avatar: string,\n    name: string,\n    message: string,\n    time: string,\n}\n\n// type DateTimePropsType = {\n//     hours: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 12,\n//     mins: number\n// }\n\n// let mins = (Array.from(Array(61).keys())).map(myNumber => {\n//     let formattedNumber = myNumber.toLocaleString('en-US', {\n//         minimumIntegerDigits: 2,\n//         useGrouping: false\n//     })\n//     return formattedNumber\n// })\n// console.log(mins)\n\nfunction Message(props: MessageDataPropsType) {\n    return (\n        <div>\n            <div className={`${MessageCSS.chat}`}>\n                <div className={`${MessageCSS.yours} ${MessageCSS.messages}`}>\n                    <div className={MessageCSS.MessageWrapper}>\n                        <img alt={'/'} className={MessageCSS.userPNG}\n                             src={`${props.avatar}`}/>\n                        <span className={MessageCSS.senderName}>Adam</span>\n                        <div className={`${MessageCSS.message} ${MessageCSS.last}`}>\n                            {props.message}\n                        </div>\n                        <span className={MessageCSS.senderName}>{props.name}</span>\n                        <span className={MessageCSS.MessageTime}>{props.time}</span>\n                    </div>\n                </div>\n                {/*<div className={`${MessageCSS.mine} ${MessageCSS.messages}`}>*/}\n                {/*    <div className={`${MessageCSS.message}`}>*/}\n                {/*        Great thanks!*/}\n                {/*    </div>*/}\n                {/*    <div className={`${MessageCSS.message} ${MessageCSS.last}`}>*/}\n                {/*        How about you?*/}\n                {/*    </div>*/}\n                {/*</div>*/}\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from \"./Message\";\nimport {MessageDataPropsType} from \"./Message\";\n\nconst messageData: MessageDataPropsType= {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Some Name',\n    message: 'some text',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            should work (должно работать)\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (_id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = (_id: number) => {\n        props.deleteAffairCallback(_id)\n    }// need to fix\n\n    return (\n        <div>\n            <span> {props.affair._id} </span>\n            <span> {props.affair.name} </span>\n            <span> {props.affair.priority} </span>\n            <button onClick={()=>deleteCallback(props.affair._id)}>X</button>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport {Button} from \"@material-ui/core\";\n// import {DataGrid, GridRowsProp, GridColDef} from '@material-ui/data-grid';\n\ntype AffairsPropsType = { // need to fix any\n    data: AffairType[]\n    setFilter: (affairs: FilterType) => void\n    deleteAffairCallback: (_id: number) => void\n}\n\n// const columns: GridColDef[] = [\n//     {field: 'col1', headerName: 'Column 1', width: 150},\n//     {field: 'col2', headerName: 'Column 2', width: 150},\n//     {field: 'col3', headerName: 'Column 3', width: 150},\n// ];\n//\n// let rows: GridRowsProp = [\n//     {}\n// ];\n\n\nfunction Affairs(props: AffairsPropsType) {\n\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    // rows = props.data.map((a: AffairType) => (\n    //     {id: a._id, col1: a.name, col2: a.priority}\n    // ))\n\n\n    const setAll = () => {\n        props.setFilter('all')\n    } // need to fix\n    const setHigh = () => {\n        props.setFilter('high')\n    }\n    const setMiddle = () => {\n        props.setFilter('middle')\n    }\n    const setLow = () => {\n        props.setFilter('low')\n    }\n\n\n\n    return (\n        <div>\n\n            {/*<div style={{ height: 300, width: '100%' }}>*/}\n            {/*    <DataGrid rows={rows} columns={columns} />*/}\n            {/*</div>*/}\n\n\n            <div>\n                {mappedAffairs}\n            </div>\n\n            <div>\n                <Button variant=\"contained\" color=\"primary\" onClick={setAll}>All</Button>\n                <Button variant=\"contained\" color=\"primary\" onClick={setHigh}>High</Button>\n                <Button variant=\"contained\" color=\"primary\" onClick={setMiddle}>Middle</Button>\n                <Button variant=\"contained\" color=\"primary\" onClick={setLow}>Low</Button>\n            </div>\n\n            <div className=\"mdc-card\">\n\n            </div>\n\n\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'low' | 'middle' | 'high' // need to fix any\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n} // need to fix any\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: AffairType[] = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => { // need to fix any\n    if (filter === 'all') return affairs\n    else return affairs.filter(a => a.priority === filter)\n}\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => { // need to fix any\n    return affairs.filter(a => a._id !== _id)// need to fix\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (event: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: string | null // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.error : '' // need to fix with (?:)\n\n    return (\n        <div>\n            <div>\n                <input value={name} onChange={setNameCallback} className={inputClass}/>\n\n                <button onClick={addUser}>add</button>\n                <span>{totalUsers}</span>\n            </div>\n            <div>{error && <span>{error}</span>}</div>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: UserType[] // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<string | null>(null) // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        setName(e.currentTarget.value)\n        setError(null)// need to fix\n    }\n    const addUser = () => {\n        if (name.trim() === '') {\n            alert('You are trying to add user without name !')\n            setError('Name is required')\n        } else {\n            alert(`Hello, ${name} !`)\n            addUserCallback(name)\n            setName('')\n\n        }\n\n        // need to fix\n    }\n\n    const totalUsers = users.length // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<UserType[]>([]) // need to fix any\n\n    const addUserCallback = (name: string) => {\n        // need to fix any\n        setUsers([...users,{_id:v1(), name:name}]) // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${error ? s.errorInput : ''} ${className ? className : s.superInput}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red,\n        disabled,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${restProps.className} `\n    return (\n        <button\n            className={disabled ? s.disabled : finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        if(onChangeChecked) {\n            onChangeChecked(e.currentTarget.checked)\n        }else{\n            return false\n        }\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeChecked ? onChangeCallback : onChange} //сделать так же с оператором ИЛИ\n                className={finalInputClassName}\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text)\n            setText('')// если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setChecked(e.currentTarget.checked)\n        console.log('testOnChange started')\n    }\n    // const preventAction = () => {}\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                />\n                <SuperInputText\n                    // className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}>delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox checked={checked} onChangeChecked={setChecked}>\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport {Container, Typography} from \"@material-ui/core\";\n\nfunction Error404() {\n    return (\n        <div>\n            <Container maxWidth=\"sm\">\n                <Typography align='center' variant=\"h1\" component=\"h2\" gutterBottom>404</Typography>\n                <Typography align='center' variant=\"h2\" gutterBottom>\n                    Page not found\n                </Typography>\n            </Container>\n        </div>\n    )\n}\n\nexport default Error404\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\nimport s from './spanStyles.module.css'\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n    const onEnterCallback = () => {\n        setEditMode(false)\n        // setEditMode() // выключить editMode при нажатии Enter\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        // setEditMode() // выключить editMode при нажатии за пределами инпута\n        setEditMode(false)\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        // setEditMode() // включить editMode при двойном клике\n        setEditMode(true)\n        onDoubleClick && onDoubleClick(e)\n    }\n\n    const spanClassName = `${s.defaultSpan} ${className}`\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    )\n}\n\nexport default SuperEditableSpan\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state)\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    let state = defaultState\n    const stateAsString = localStorage.getItem(key)\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\n    return state\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// пример использования:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке 'test'\nsaveState<StateType>('test', {x: 'A', y: 1})\n\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\n// const state: StateType = restoreState<StateType>('test', {x: '', y: 0})\n","import React, {useState} from 'react'\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport {restoreState, saveState} from './localStorage/localStorage'\n\nfunction HW6() {\n    const [value, setValue] = useState<string>('')\n\n    const save = () => {\n        saveState<string>('editable-span-value', value)\n    }\n    const restore = () => {\n        setValue(restoreState<string>('editable-span-value',value))\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : 'enter text...'}}\n                />\n            </div>\n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton red onClick={restore}>restore</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW6\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const mappedOptions: any[] = []; // map options with key\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        // onChange, onChangeOption\n    }\n\n    return (\n        <select onChange={onChangeCallback} {...restProps}>\n            {mappedOptions}\n        </select>\n    )\n}\n\nexport default SuperSelect\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // onChange, onChangeOption\n    }\n\n\n    const mappedOptions: any[] = options ? options.map((o, i) => ( // map options with key\n        <label key={name + '-' + i}>\n            <input\n                type={'radio'}\n                // name, checked, value, onChange\n            />\n            {o}\n        </label>\n    )) : []\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    )\n}\n\nexport default SuperRadio\n","import React, {useState} from 'react'\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\n\nconst arr = ['x', 'y', 'z']\n\nfunction HW7() {\n    const [value, onChangeOption] = useState(arr[1])\n\n    return (\n        <div>\n            <hr/>\n            homeworks 7\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperSelect\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n            <div>\n                <SuperRadio\n                    name={'radio'}\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperSelect/>*/}\n            {/*<AlternativeSuperRadio/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW7\n","import React from \"react\";\nimport HW6 from \"../../h6/HW6\";\nimport HW7 from \"../../h7/HW7\";\n\nexport const Junior = () => {\n    return <div>\n        <HW6/>\n        <HW7/>\n    </div>\n}","import React from 'react'\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport PreJunior from \"./pages/PreJunior\";\nimport Error404 from \"./pages/Error404\";\nimport {Junior} from \"./pages/Junior\";\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    JUNIOR: '/junior',\n    JUNIOR_PLUS:'/junior-plus'\n}\n\nfunction Routes() {\n    return (\n        <>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n                <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n                <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\n\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport Routes from './Routes'\nimport {HashRouter} from \"react-router-dom\";\nimport s from './HW5.module.css'\n\nfunction HW5() {\n    return (\n        <div className={s.hw5}>\n                <HashRouter>\n                    <Routes/>\n                </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        title: {\n            flexGrow: 1,\n        },\n    }),\n);\ntype NavbarPropsType = {\n    openSideBar:(status:boolean)=>void\n}\nexport const Navbar = (props:NavbarPropsType) => {\n    const classes = useStyles();\n    const openSideBar = ()=>{\n        props.openSideBar(true)\n    }\n\n    return <>\n        <div className={classes.root}>\n            <AppBar position=\"sticky\">\n                <Toolbar>\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={openSideBar}>\n                        <MenuIcon/>\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Simple-react-homeworks\n                    </Typography>\n                    <Button color=\"inherit\">Login</Button>\n                </Toolbar>\n            </AppBar>\n        </div>\n    </>\n}","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport {NavLink} from 'react-router-dom';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: 250,\n            maxWidth: 360,\n            backgroundColor: theme.palette.background.paper,\n        },\n        nested: {\n            paddingLeft: theme.spacing(4),\n        },\n        fontStyle:{\n            textDecoration: 'none',\n            color:'black'\n        },\n        activeLinkStyles:{\n            color:'green',\n            backgroundColor: theme.palette.background.paper,\n        }\n    }),\n);\ntype SidebarListPropsType = {\n    closeOnClick:(state:boolean)=>void\n}\nexport default function SidebarList(props:SidebarListPropsType) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    const handleClick = () => {\n        setOpen(!open);\n    };\n\n    return (\n        <>\n        <List\n            component=\"nav\"\n            aria-labelledby=\"nested-list-subheader\"\n            subheader={\n                <ListSubheader component=\"div\" id=\"nested-list-subheader\">\n                    Select a page to display\n                </ListSubheader>\n            }\n            className={classes.root}\n        >\n            <NavLink activeClassName={classes.activeLinkStyles} className={classes.fontStyle} to={'/pre-junior'}><ListItem button onClick={()=>props.closeOnClick(false)}>\n                <ListItemText primary=\"Pre-junior\" />\n            </ListItem></NavLink>\n            <NavLink activeClassName={classes.activeLinkStyles} className={classes.fontStyle} to={'/junior'}><ListItem button onClick={()=>props.closeOnClick(false)}>\n                <ListItemText primary=\"Junior\" />\n            </ListItem></NavLink>\n            <ListItem button onClick={handleClick}>\n                <ListItemText primary=\"Not ready pages\" />\n                {open ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                    <NavLink activeClassName={classes.activeLinkStyles} className={classes.fontStyle} to={'/notReady'}><ListItem button className={classes.nested} onClick={()=>props.closeOnClick(false)}>\n                        <ListItemText primary=\"Junior Plus\" />\n                    </ListItem></NavLink>\n                </List>\n            </Collapse>\n        </List>\n        </>\n    );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {makeStyles} from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport SidebarList from \"./SidebarList\";\nimport {HashRouter} from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n    list: {\n        width: 300,\n    },\n    fullList: {\n        width: 'auto',\n    },\n});\n\ntype SidebarPropsType = {\n    isOpen: boolean,\n    openSideBar: (state: boolean) => void\n}\nexport default function Sidebar(props: SidebarPropsType) {\n    const classes = useStyles();\n    const toggleDrawer = (open: boolean) => (\n        event: React.KeyboardEvent | React.MouseEvent,\n    ) => {\n        if (\n            event &&\n            event.type === 'keydown' &&\n            ((event as React.KeyboardEvent).key === 'Tab' ||\n                (event as React.KeyboardEvent).key === 'Shift')\n        ) {\n            return;\n        }\n\n        props.openSideBar(open);\n    };\n\n    return (\n        <div className={clsx(classes.list)}>\n            <React.Fragment>\n                <SwipeableDrawer\n                    anchor={'left'}\n                    open={props.isOpen}\n                    onClose={toggleDrawer(false)}\n                    onOpen={toggleDrawer(true)}\n                >\n                    <HashRouter>\n                        <SidebarList closeOnClick={props.openSideBar}/>\n                    </HashRouter>\n                </SwipeableDrawer>\n            </React.Fragment>\n        </div>\n    );\n}\n","import React, {useState} from 'react'\nimport s from './App.module.css'\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\nimport {Navbar} from \"../../../p2-homeworks/h5/Navbar\";\nimport Sidebar from \"../../../p2-homeworks/h5/Sidebar\";\n\n\nfunction App() {\n    const [sideBarStatus,setSideBarStatus] = useState(false)\n\n    return (\n        <div className={s.App}>\n            <Navbar openSideBar={setSideBarStatus} />\n            <Sidebar isOpen={sideBarStatus} openSideBar={setSideBarStatus}/>\n            <HW5/>\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}